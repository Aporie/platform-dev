--- sites/all/modules/contributed/media/media.install
+++ sites/all/modules/contributed/media/media.install
@@ -825,6 +826,17 @@ function media_update_7206() {
       file_display_save((object) $display);
     }
   }
+
+  // Default fields on the image file type.
+  $default_image_fields = array('field_file_image_alt_text', 'field_file_image_title_text');
+  $instances = field_read_instances(array('entity_type' => 'file'));
+  foreach ($instances as $instance) {
+    if (in_array($instance['field_name'], $default_image_fields)){
+      $instance['settings']['wysiwyg_override'] = 1;
+      field_update_instance($instance);
+    }
+  }
+
 }
 
 /**
@@ -1068,3 +1080,33 @@ function media_update_7218() {
 
   variable_del('media__xml_cache_expire');
 }
+
+/**
+ * Update fields attached to files so that they are only overwritable
+ * in the WYSIWYG if they are text or long_text field types.
+ */
+function media_update_7219() {
+  $instances = field_read_instances(array('entity_type' => 'file'));
+  $updated = array();
+  $set_to_default = array();
+  foreach ($instances as $instance) {
+    $field_info = field_info_field($instance['field_name']);
+    if (!in_array($field_info['type'], media_get_wysiwyg_override_field_types())) {
+      unset($instance['settings']['wysiwyg_override']);
+      field_update_instance($instance);
+      $updated[] = $instance['field_name'];
+    }
+    if (in_array($field_info['type'], media_get_wysiwyg_override_field_types())) {
+      if (!isset($instance['settings']['wysiwyg_override'])) {
+        $instance['settings']['wysiwyg_override'] = 1;
+        field_update_instance($instance);
+        $set_to_default[] = $instance['field_name'];
+      }
+    }
+    if (count($updated)) {
+      $updated_string = implode(', ', $updated);
+      return "Updated the following field instances: $updated_string so they can't be overridden when the file is inserted in the WYSIWYG.\n
+        Updated the following fields $set_to_default so that they continue to show up when a file is inserted.";
+    }
+  }
+}
diff --git a/media.module b/media.module
index 7435518..a7d5a6d 100644
--- sites/all/modules/contributed/media/media.module
+++ sites/all/modules/contributed/media/media.module
@@ -475,16 +475,22 @@ function media_form_field_ui_field_edit_form_alter(&$form, &$form_state) {
     // Do not increase maxlength of file extensions for image fields, since
     // presumably they will not need a long list of extensions.
   }
+  // Add a checkbox that marks this field as one that can be
+  // overridden in the WYSIWYG.
   if ($form['#instance']['entity_type'] == 'file') {
-    $form['instance']['settings']['wysiwyg_override'] = array(
-      '#type' => 'checkbox',
-      '#title' => t('Override in WYSIWYG'),
-      '#description' => t('If checked, then this field may be overridden in the WYSIWYG editor.'),
-      '#default_value' => isset($form['#instance']['settings']['wysiwyg_override']) ? $form['#instance']['settings']['wysiwyg_override'] : TRUE,
-    );
+    $field_type = $form['#field']['type'];
+    if (in_array($field_type, media_get_wysiwyg_override_field_types())) {
+      $form['instance']['settings']['wysiwyg_override'] = array(
+        '#type' => 'checkbox',
+        '#title' => t('Override in WYSIWYG'),
+        '#description' => t('If checked, then this field may be overridden in the WYSIWYG editor.'),
+        '#default_value' => isset($form['#instance']['settings']['wysiwyg_override']) ? $form['#instance']['settings']['wysiwyg_override'] : TRUE,
+      );
+    }
   }
 }
 
+
 /**
  * Implements hook_form_FORM_ID_alter().
  */
@@ -596,6 +602,19 @@ function _media_file_entity_access_recursive($files, $op) {
 /* ***************************************** */
 
 /**
+ * Returns a list of field types that can be overridden. We currently
+ * only allow text and text_long because they are the only ones that can be
+ * reliably parsed into and out of JSON, GET paramters etc.
+ *
+ * @return array $allowed_field_types
+ */
+function media_get_wysiwyg_override_field_types() {
+  $allowed_field_types = variable_get('media__wysiwyg_override_field_types',
+    array('text', 'text_long'));
+  return $allowed_field_types;
+}
+
+/**
  * Load callback for %media_multi placeholder in menu paths.
  *
  * @param string $fids
