--- sites/all/modules/contributed/chr/chr.module	2012-05-22 23:09:49.000000000 +0200
+++ sites/all/modules/contributed/chr/chr.module	2014-06-05 12:01:16.000000000 +0200
@@ -83,7 +83,7 @@
   $proxy = ('https' == $uri['scheme']) ? $options['https_proxy'] : $options['http_proxy'];
 
   // Nullify the proxy if the host to send the request to is part of the proxy's exceptions.
-  if ((!empty($proxy['exceptions'])) && (array_key_exists($uri['host'], $proxy['exceptions']))) {
+  if ((!empty($proxy['exceptions'])) && (in_array($uri['host'], $proxy['exceptions']))) {
     $proxy = NULL;
   }
 
@@ -187,16 +187,24 @@
     case 'POST':
       $curl_opt[CURLOPT_POST] = TRUE;
       if (!empty($options['data'])) {
-        $curl_opt[CURLOPT_POSTFIELDS] = drupal_http_build_query($options['data']);
+        $curl_opt[CURLOPT_POSTFIELDS] = $options['data'];
       }
       break;
     case 'PUT':
       $curl_opt[CURLOPT_PUT] = TRUE;
       break;
+    // FPFIS fix jira REST remoting
+    // https://answers.atlassian.com/questions/72475/jira-update-custom-fields-using-rest-php-and-curl
+    case 'PUT_JIRA':
+      $curl_opt[CURLOPT_CUSTOMREQUEST] = "PUT";
+      $curl_opt[CURLOPT_POSTFIELDS] = $options['data'];
+      break;
+    case 'HEAD':
+      $curl_opt[CURLOPT_NOBODY] = TRUE;
+      break;
     default:
-      $result->error = 'invalid method ' . $options['method'];
-      $result->code = -1004;
-      return $result;
+      $curl_opt[CURLOPT_HEADER] = TRUE;
+      $curl_opt[CURLOPT_CUSTOMREQUEST] = $options['method'];
   }
 
   // Make the request.
@@ -229,7 +237,10 @@
   // Parse response headers from the response body.
   // Be tolerant of malformed HTTP responses that separate header and body with
   // \n\n or \r\r instead of \r\n\r\n.
-  list($response, $result->data) = preg_split("/\r\n\r\n|\n\n|\r\r/", $result->data, 2);
+  // fix MULTISITE-1944
+  $param = preg_split("/\r\n\r\n|\n\n|\r\r/", $result->data, 2);
+  $response = $param[0];
+  $result->data = (isset($param[1])) ? $param[1] : "";
 
   // Sometimes when making an HTTP request via proxy using cURL, you end up with a multiple set of headers:
   // from the web server being the actual target, from the proxy itself, etc.
