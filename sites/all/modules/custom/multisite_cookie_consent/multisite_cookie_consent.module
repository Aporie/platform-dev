<?php

/**
 * Implements hook_menu
 */
function multisite_cookie_consent_menu(){
    $items =  array();
    $items['admin/config/eucookie-consent'] = array(
        'title'              => 'eucookie consent settings',
        'description'        => 'Administer Eu cookie consent.',
        'page arguments' => array('multisite_cookie_consent_admin_settings'),
        'access arguments' => array('administer_eucookie_consent'),
        'file' => 'multisite_cookie_consent.admin.inc',
        'page callback' => 'drupal_get_form',
        'weight'             => -8,
        'type' => MENU_LOCAL_TASK,
    );

    $items['cookie-notice'] = array(
        'title'              => 'Cookies used',
        'description'        => 'Notice page',
        'page callback' => array('multisite_cookie_consent_notice'),
        'access arguments' => array('access content'),
        'weight'             => -7,
        'type' => MENU_CALLBACK,
    );

    return $items;
}

/**
 * Implements hook_init
 */
function multisite_cookie_consent_init(){
    //notice url
    $notice_page = url('cookie-notice' , array('absolute' => TRUE));
    //add for example external
    drupal_add_js('http://ec.europa.eu/wel/like/js/likedislike.js' , 'external');
    //add js inline (example for now):
    drupal_add_js('var consent_required_cookies = {
        "a":{
            "joinup":["youtube","vimeo"]}
        };
        var cookie_notice_url = {
        "en":"'.$notice_page.'"};', 'inline');
    //external pointer to EC consent.js file
    $consent_js = variable_get('eucookie_consent_ec_consent_javascript',
    'http://ec.europa.eu/wel/cookie-consent/consent.js');

    //Consent banner
if (user_is_logged_in()){
    if (variable_get('eucookie_consent_ec_consent_loggedin') == 1){
        //inclusion of external JavaScript from EC
        drupal_add_js($consent_js , 'external');
    }
} else {
    //inclusion of external JavaScript from EC
    drupal_add_js($consent_js , 'external');
    }
}

/**
 * Implementation of hook_permission().
 */
function multisite_cookie_consent_permission() {
    return array(
        'administer_eucookie_consent' => array(
            'title' => t('Administer eucookie consent settings'),
        ),
    );
}

/**
 * creates cookie notice page
 * @return string
 */
function multisite_cookie_consent_notice(){
    //get all descriptions available
    $descriptions  = multisite_cookie_consent_getcookie('en');
    return $descriptions;
}

/**
 * Saves cookie description to db
 * @param $cookie_id
 * @param $cookie
 */
function multisite_cookie_consent_savecookie($cookie_id, $cookie){
    //insert to db
    db_insert('eucookie_consent')
        ->fields(array(
            'cookie_id' => $cookie_id,
            'cookie_description' => drupal_json_encode($cookie),
        ))
        ->execute();
}

/**
 * Removes previous cookies stored in the database
 * @param bool $cookie_id
 */
function multisite_cookie_consent_removecookie($cookie_id = false ){
    //remove to db
    if (!$cookie_id){
        db_delete('eucookie_consent')
            ->execute();
    } else {
        if (is_numeric($cookie_id)){
        db_delete('eucookie_consent')
            ->conditions('cookie_id', $cookie_id)
            ->execute();
        }
    }
}

//get cookie description from db, unseriolized
function multisite_cookie_consent_getcookie($language = 'default'){
    $output = '';
    //todo: filter by specific cookie
    $result = db_query("SELECT * FROM {eucookie_consent}");
    foreach ($result as $record) {
        //unserialize
        $cookie_info = drupal_json_decode($record->cookie_description);
        //build output for notice page
        $output .= '<h1>' . $cookie_info['translation'][$language]['name'] . '</h1>';
        $output .= '<p>' . $cookie_info['translation'][$language]['description'] . '</p>';

    }
  return $output;
}


function _multisite_cookie_consent_site_name($site_name){
    return 0;

}