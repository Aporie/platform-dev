<?php

/**
 * @file
 * Tests for communities.module.
 */

/**
 * Defines a base class for testing the "communities" module.
 */
class ecas_group_syncWebTestCase extends DrupalWebTestCase {
  protected $community_user;
  protected $admin_user;
  protected $contributor_user;

  protected $profile = 'multisite_drupal_communities';

  public static function getInfo() {
    return array(
      'name' => 'ecas_group_sync',
      'description' => 'Test the synchronization between LDAP and user accounts',
      'group' => 'ECAS',
    );
  }

  function setUp() {
    parent::setUp(array(
      'ecas_env',
      'ecas_group_sync',
    ));

    $this->admin_user = $this->drupalCreateUserWithRole("administrator");
    $this->contributor_user = $this->drupalCreateUserWithRole("contributor");
    $this->editor_user = $this->drupalCreateUserWithRole("editor");
  }

  function testEcasGroupSync() {
    // check the communities directory URL
    $this->drupalGet('communities_directory');
    //OK code 200
    $this->assertResponse(200); 
  }

  /**
   * Creates a user with the give role.
   * */
  public function drupalCreateUserWithRole($role) {
    // Get all of the roles in the system.
    $roles = user_roles();

    // Find the index for the role we want to assign to the user.
    $index = array_search($role, $roles);

    // Get the permissions for the role.
    $permissions = user_role_permissions(array(array_search($role, $roles) => $role));

    // Create the user with the permissions.
    $user = $this->drupalCreateUser(array_keys($permissions[$index]));

    // Assign the role.
    $user->roles[$index] = $role;

    // Return the user we have created.
    return user_save($user);
  }

}
