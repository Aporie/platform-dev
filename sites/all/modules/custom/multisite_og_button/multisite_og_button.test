<?php

/**
 * Tests the functionality of the OG Button module.
 */
class OGButtonTestCase extends DrupalWebTestCase {
  protected $users;
  protected $groups;
  protected $content;
  
  public static function getInfo() {
    return array(
      'name' => 'Multisite organic groups button',
      'description' => 'Ensure that the organic groups button module functions properly.',
      'group' => 'Organic groups',
    );
  }

  public function setUp() {
    // Enable any modules required for the test
    parent::setUp('multisite_og_button', 'og');
    
    // create a group type
    $this->drupalCreateContentType(array(
    	'type' => 'groups',
      'name' => 'groups', 
    ));
    og_create_field(OG_GROUP_FIELD, 'node', 'group');
        
    // Create some group content types
    $this->drupalCreateContentType(array(
            	'type' => 'group_content_a',
              'name' => 'group_content_a', 
    ));
    og_create_field(OG_AUDIENCE_FIELD, 'node', 'group_content_a');    

    $this->drupalCreateContentType(array(
                	'type' => 'group_content_b',
                  'name' => 'group_content_b', 
    ));
    og_create_field(OG_AUDIENCE_FIELD, 'node', 'group_content_b');
    
    $this->drupalCreateContentType(array(
                	'type' => 'group_content_c',
                  'name' => 'group_content_c', 
    ));
    og_create_field(OG_AUDIENCE_FIELD, 'node', 'group_content_c');
    
    // Create a user who can edit groups.
    $this->users['admin'] = $this->drupalCreateUser(array(
                  'access content',
                  'administer blocks',
                  'administer nodes',
                  'administer users',
            			'administer content types',
                  'create groups content',
                  'edit any groups content',
                  'administer group',
    ));
    $this->drupalLogin($this->users['admin']);    
    
    // Create some groups 
    $settings = array();
    $settings['type'] = 'groups';
    $settings['title'] = 'Group A';
    $settings[OG_GROUP_FIELD][LANGUAGE_NONE][0]['value'] = 1;
    $this->groups['groupa'] = $this->drupalCreateNode($settings);
    
    $settings = array();
    $settings['type'] = 'groups';
    $settings['title'] = 'Group B';
    $settings[OG_GROUP_FIELD][LANGUAGE_NONE][0]['value'] = 1;
    $this->groups['groupb'] = $this->drupalCreateNode($settings);

    // Create a user who can edit group_content_a and group_content_b
    $this->users['usera'] = $this->drupalCreateUser(array(
                  'access content',
                  'create group_content_a content',
    							'create group_content_b content',                  
                  'edit any group_content_a content',                 
                  'edit any group_content_b content'
    ));
    
    // Associate usera to the groupa.
    $group = og_get_group('node',  $this->groups['groupa']->nid);
    og_group($group->gid, array(
    	'entity' => $this->users['usera']
    ));
        
    $this->drupalLogout();
  }
  
  public function testOGButtonModule() {
    $region = 'content';
    $block_id = 'og-contextual-links';
    $module = 'multisite_og_button';
    
    // What we will test:
    // #1: assign the block to a region
    // #2: check if the block is displayed onto a group page

    // Login as admin
    $this->drupalLogin($this->users['admin']);
    
    // #1 assign the block to a region   
    $edit = array(
      'blocks['.$module.'_'.$block_id.'][region]' => $region,
    );
    $this->drupalPost('admin/structure/block', $edit, 'Save blocks');
    
    $this->drupalLogout();
    
    // Login as user a  
    $this->drupalLogin($this->users['usera']);
    
    // #2: check if the block is displayed onto a group page
    $this->drupalGet('node/'.$this->groups['groupa']->nid);
    $this->assertText('Create content', t('Found the organic groups button block.'));
    
    $this->assertText('group_content_a', t('Found link to create a new group_content_a.'));
    $this->assertText('group_content_b', t('Found link to create a new group_content_b.'));
    $this->assertNoText('group_content_c', t('Did not found link to create a new group_content_c.'));
  }
}