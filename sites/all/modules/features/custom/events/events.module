<?php
/**
 * @file
 * Code for the Events feature.
 */

include_once('events.features.inc');




/*
* hook_menu
*/
function events_menu() {

  $items = array();
 
  $items['community/%group_name/calendar'] = array(
    'title' => 'Events',
    'page callback' => 'views_page',
    'page arguments' => array('calendar', 'month', 1),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'menu-communities-menu',
    'weight' => 1,
  );
 
   $items['community/%group_name/calendar/week'] = array(
    'title' => 'Week',
    'page callback' => 'views_page',
    'page arguments' => array('calendar', 'week', 1),
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
    'menu_name' => 'menu-communities-menu',
    'weight' => 1,
  );
  
   $items['community/%group_name/calendar/day'] = array(
    'title' => 'Day',
    'page callback' => 'views_page',
    'page arguments' => array('calendar', 'day', 1),
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
    'menu_name' => 'menu-communities-menu',
    'weight' => 1,
  );
  
   $items['community/%group_name/calendar/year'] = array(
    'title' => 'Year',
    'page callback' => 'views_page',
    'page arguments' => array('calendar', 'year', 1),
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
    'menu_name' => 'menu-communities-menu',
    'weight' => 1,
  );
 
return $items;}


/**
 * Add a buttons in the views associated with this feature
 * @param type $view 
 */
function events_views_pre_render(&$view) {
if($view->name=='calendar'){

  $group = og_context();

		switch( $view->current_display ) {
			case 'upcoming_events':
				
				break;
			case 'month':
			case 'week':
			case 'day':
			case 'year':
				if ( og_user_access($group->gid,'create event content') ) {
					$view->header['area']->options['content'] = _events_get_link_from_group();
				}
				break;
			default:
				break;
		}  
	}
}


function _events_get_link_from_group(){

    $group = og_context();
    $group_id = isset($group) ? $group->etid : '';
    
    $attributes = array( 
        'attributes' => array(
            'type' => 'add',
			'action_bar' => 'single'
            ),
        );
    
    $options = array( 
        'query' => array( 
            'gids_node[]' => $group_id,
            ),
        'absolute' => TRUE,
        );
    
    $url = url( 'node/add/event', $options );
    
    return l( t('Add a new Event'), 
      $url, 
      $attributes );
}