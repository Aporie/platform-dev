<?php
/**
 * @file
 * Code for the Survey feature.
 */

include_once('survey.features.inc');


/*
* hook_menu
*/
function survey_menu() {
  $items = array();
 
  $items['community/%group_name/survey'] = array(
    'title' => 'survey',
    'page callback' => 'views_page',
    'page arguments' => array('surveys_list', 'page_1', 1),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'menu-communities-menu',
    'weight' => 1,
  );

  $items['survey_analysis/%'] = array(
    'title' => 'Analysis',
    'page callback' => 'survey_analysis',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'weight' => 5,
  );

  return $items;
}


/*
* display analysis results of a webform
*/
function survey_analysis($nid) {
  $node = node_load($nid);
  $sids = array();
  $components = $node->webform['components'];
  $data = array();
  foreach ($components as $cid => $component) {
    if ($row_data = webform_component_invoke($component['type'], 'analysis', $component, $sids, FALSE)) {
      $data[$cid] = $row_data;
    }
  }
  return theme('webform_results_analysis', array('node' => $node, 'data' => $data, 'sids' => $sids, 'component' => NULL));
}


/*
* hook_enable
*/
function survey_enable() {
  _add_views_context("communities","surveys_list");
  _add_block_context('communities', 'surveys_list-block_1', 'views', 'surveys_list-block_1', 'sidebar_first');
  _add_content_type_context('communities','webform');
  
  // change content type webform name to survey
  db_update('node_type')
    ->fields(array('name' => 'Survey'))
    ->condition('type', 'webform' , "=")
    ->execute();  
}


/*
 * Hook disable 
 */
function survey_disable(){

  // Remove block
  _remove_views_context("communities", "surveys_list");
  _remove_block_context('communities', 'surveys_list-block_1');
  _remove_content_type_context('communities','webform');
  
  
  
    // remove permissions to roles ----------------------------------------------------------------------------------------------------------------------------------------------
    // Contributor
    $contrib_rid = get_rid('contributor');
    user_role_revoke_permissions($contrib_rid, array(
      'access own webform results',
      'access own webform submissions',
      'delete own webform content',
      'delete own webform submissions',
      'edit own webform content',
      'edit own webform submissions',
      'access all webform results',
      'edit all webform submissions',
    ));

    // authenticated user
    $au_rid = get_rid('authenticated user');
    user_role_revoke_permissions($au_rid, array(
      'access all webform results',
    ));
          
    // Add permissions to OG roles ---------------------------------------------------------------  
    // Community Manager
    $cm_rid = get_og_rid('community_manager');
	 
    og_role_revoke_permissions($cm_rid, array(
      'create webform content',
      'delete any webform content',
      'delete own webform content',
      'update any webform content',
      'update own webform content',
    ));
    
    // Administrator Member
	$admm_rid = get_og_rid('administrator member');
    og_role_revoke_permissions($admm_rid, array(
      'create webform content',
      'delete any webform content',
      'delete own webform content',
      'update any webform content',
      'update own webform content',
    ));  
  
}




/*
* hook_views_pre_render
*/

function survey_views_pre_render(&$view) {
  if($view->name == 'surveys_list' && $view->current_display == 'page_1') {
    if(user_access('create webform content'))  {
	  $og = og_context();
      $output = l(t('Create a new survey'),'node/add/webform',array('query' => array('gids_node[]' => $og->etid), 'attributes' => array('type' => 'add', 'action_bar' => 'last', 'btn_group' => 'single')));
      $view->header['area']->options['content'] = $output;
	}
  }
}
