<?php
/**
 * @file
 * Code for the CCE_basic_config feature.
 */

include_once('cce_basic_config.features.inc');
include_once('cce_basic_config.file_default_displays.inc');



function cce_basic_config_menu_alter(&$items) {
  // hide default search tab --------------------------------------------------------------------------------------------- 
  $items['search/node']['access callback'] = FALSE;
}

function cce_basic_config_form_system_site_information_settings_alter(&$form, &$form_state, $form_id) {
  //Get Taxonomy classification vid
  $vid_classification = db_select('taxonomy_vocabulary', 't')
           -> fields('t')
           -> condition('machine_name', 'classification', '=')
           -> execute()
           ->fetchAll();
  //Get Taxonomy tree
  $classification = taxonomy_get_tree($vid_classification[0]->vid);

  foreach ($classification as $key => $obj_term) {
   $list[$obj_term->name] = $obj_term->name . ' - ' . strip_tags($obj_term->description);
  }

  //Create fieldset 'META Data'
  $form['meta'] = array(
    '#type' => 'fieldset',
    '#title' => t('META data'),
    '#weight' => 10,
    '#collapsible' => FALSE
  );
  
  //Create select field 
  $form['meta']['classification'] = array(
    '#type' => 'select',
    '#title' => t('IPG Classification'),
    '#options' => $list,
    '#required' => TRUE,
    '#empty_option' => 'none',
    '#default_value' => variable_get('meta_configuration', 'none'),
    '#description' => t('Choose the classification for your website. This classification respects the ' . l(t('IPG guidelines'), 'http://ec.europa.eu/ipg/content/optimise/metadata/annex2_en.htm')),
  );

  //Get the 'code' and set meta_configuration variable
  if (isset($form_state['input']['op']) && $form_state['input']['op'] == 'Save configuration') {
    if (isset($form_state['input']['classification'])) {
      $pattern = '@(^[0-9]+).*@';
      $subject = $form_state['input']['classification'];
      $result = preg_match($pattern, $subject, $matches);
      if (isset($matches[1])) {
        variable_set('meta_configuration', $matches[1]);
      }
    }
  }

}

function cce_basic_config_form_media_format_form_alter(&$form) {
  // when putting a media in content with wysiwyg we just allow the default view mode for media document
  if($form['#media']->type == 'document') { 
    unset($form['options']['format']['#options']['teaser']);
    unset($form['options']['format']['#options']['preview']);
    unset($form['#formats']['preview']);
    unset($form['#formats']['teaser']);
  }
}


function cce_basic_config_update_7140() {
  // manually save file document display in database
  // the feature settings are not properly injected in database
  // this process must be temporary
  db_delete('file_display')->execute();
  $exports = cce_basic_config_file_default_displays();
  foreach($exports as $id_export => $settings_export) {
    if(substr($id_export, 0, 8) == 'document') {
      db_insert('file_display')
        ->fields(array(
          'name' => $id_export,
          'weight' => 0,
          'status' => ($settings_export->status)?1:0,
          'settings' => serialize($settings_export->settings),
        ))
        ->execute();
    }
  }
}
