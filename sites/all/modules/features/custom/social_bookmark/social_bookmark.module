<?php
/**
 * @file
 * This is the .module file of the social bookmark feature.
 */

/**
 * Implements hook_init().
 */
function social_bookmark_init() {
  if (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on') {
    drupal_add_js('https://ec.europa.eu/wel/socialbookmark/share.js', 'external');
  }
  else {
    drupal_add_js('http://ec.europa.eu/wel/socialbookmark/share.js', 'external');
  }
}

/**
 * Implements hook_form_alter().
 */
function social_bookmark_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'social_bookmark_admin_settings') {
    drupal_add_js(drupal_get_path('module', 'social_bookmark') . '/scripts/form_script.js');
  }
}

/**
 * Implements hook_block_info().
 */
function social_bookmark_block_info() {
  $blocks['social-bookmark'] = array(
    'info' => t('Social bookmark'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function social_bookmark_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'social-bookmark':
      $block['content'] = social_bookmark_contents();
      break;
  }
  return $block;
}

/**
 * Custom html block.
 */
function social_bookmark_contents() {
  $sta_socialbookmark = variable_get('statistics_socialbookmark');
  switch ($sta_socialbookmark) {
    case TRUE:
      $sta_final = '"stats":true, ';
      break;

    case FALSE:
      $sta_final = '"stats":false, ';
      break;

    default:
      $sta_final = '"stats":true, ';
      break;
  }

  $lan_socialbookmark = variable_get('language_socialbookmark');
  $language_selector_socialbookmark = variable_get('language_selector_socialbookmark');
  switch ($lan_socialbookmark) {
    case 'From URL':
      $lan_final = '"lang":"FromURL", ';
      break;

    case 'From META DATA':
      $lan_final = '"lang":"FromMETA", ';
      break;

    case 'Language specified':
      $lan_final = '"lang":"' . $language_selector_socialbookmark . '", ';
      break;

    default:
      $lan_final = '"lang":"FromURL", ';
      break;
  }

  $typ_socialbookmark = variable_get('type_socialbookmark');
  $siz_socialbookmark = variable_get('icon_size_socialbookmark');
  switch ($typ_socialbookmark) {
    case 'Button':
      $typ_final = '"style":"button", ';
      break;

    case 'Icon':
      $typ_final = '"style":"icon", "size":' . $siz_socialbookmark . ', ';
      break;

    default:
      $typ_final = '"style":"button", ';
      break;
  }

  $ove_socialbookmark = variable_get('override_socialbookmark');
  $lab_socialbookmark = variable_get('label_socialbookmark');
  switch ($ove_socialbookmark) {
    case TRUE:
      $ove_final = '"text":"' . $lab_socialbookmark . '", ';
      break;

    case FALSE:
      $ove_final = '';
      break;

    default:
      $ove_final = '';
      break;
  }

  $dis_socialbookmark = variable_get('display_socialbookmark');
  $atl_socialbookmark = variable_get('least_socialbookmark');
  switch ($dis_socialbookmark) {
    case TRUE:
      $dis_final = '"counter_display":true, ';
      if ((is_numeric($atl_socialbookmark)) && ($atl_socialbookmark >= 1)) {
        $dis_final = '"counter_display":"atleast' . $atl_socialbookmark . '", ';
      }
      break;

    case FALSE:
      $dis_final = '"counter_display":false, ';
      break;

    default:
      $dis_final = '"counter_display":false, ';
      break;
  }

  $ori_socialbookmark = variable_get('orientation_socialbookmark');
  switch ($ori_socialbookmark) {
    case 'Right':
      $ori_final = '"counter_position":"right"';
      break;

    case 'Left':
      $ori_final = '"counter_position":"left"';
      break;

    default:
      $ori_final = '"counter_position":"right"';
      break;
  }

  $ret = '<div id="ec-widget-share" style="word-wrap: normal"><!--{' . $sta_final . $lan_final . $typ_final . $ove_final . $dis_final . $ori_final . '}//--></div>';
  return $ret;
}

/**
 * Implements hook_menu().
 */
function social_bookmark_menu() {
  $items = array();
  $path = drupal_get_path('module', 'social_bookmark');

  $items['admin/config/socialbookmark'] = array(
    'title' => 'Social Bookmark',
    'description' => 'Configuration for the Social Bookmark module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('social_bookmark_admin_settings'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'social_bookmark.admin.inc',
    'file path' => $path,
  );
  return $items;
}

/**
 * Implements hook_preprocess_node().
 */
function social_bookmark_preprocess_node(&$variables) {
  $variables['social_bookmark'] = social_bookmark_contents();
}
