<?php
/**
 * @file
 * Code for the gallerymedia_core feature.
 */

include_once 'gallerymedia_core.features.inc';
include_once 'gallerymedia_core.views_alter.inc';

/**
 * Implementation of hook_token_info().
 */
function gallerymedia_core_token_info() {
    $info['types']['Breadcrumb_gallery'] = array(
        'name' => 'Breadcrumb_gallery',
        'description' => 'Tokens related to Breadcrumb.',
    );
    $info['tokens']['Breadcrumb_gallery']["gallerymedia_title"] = array(
        'name' => t("gallerymedia Breadcrumb title"),
        'description' => t("The Breadcrumb title of the gallerymedia."),
    );
    return $info;
}

/**
 * Implements hook_tokens().
 *
 */
function gallerymedia_core_tokens($type, $tokens, $data = array(), $options = array()) {
    $replacements = array();
    $sanitize = !empty($options['sanitize']);
    // tokens for e_libray_core Breadcrumb
    if ($type == 'Breadcrumb_gallery') {
        foreach ($tokens as $name => $original) {
            switch ($name) {
                case 'gallerymedia_title':
                    $replacements[$original] = t("gallerymedia");
                    break;
            }
        }
    }
    return $replacements;
}

function gallerymedia_core_pager ($nid) {

	$query = db_select('file_usage', 'fu')
    ->extend('PagerDefault') 	//Pager Extender
    ->limit(16)
    ->element('gallerypager');
  $query->leftJoin('file_managed', 'fmd', 'fmd.fid=fu.fid');
  $query->leftJoin('field_data_field_video_upload', 'fvu', 'fvu.field_video_upload_fid=fmd.fid');
  $query->leftJoin('field_data_field_picture_upload', 'fpu', 'fpu.field_picture_upload_fid=fmd.fid');
  $or = db_or()->condition('fvu.entity_id', $nid,'=')->condition('fpu.entity_id', $nid,'=');
  $query->condition($or);
        
  $query->fields ('fmd', array (
    'uri',
    'type',
    'timestamp',
    'filename',
    'fid',
  ));
  
  $query->fields ('fvu', array (
    'field_video_upload_thumbnail'
  ));  				
  
	$results = $query
				->execute()
        ->fetchAllAssoc('fid');
	
			
	return ($results);
}