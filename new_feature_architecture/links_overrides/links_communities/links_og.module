<?php
/**
 * @file
 * Code for the Links feature.
 */

include_once('links_og.features.inc');

/*
 * hook_enable 
 * Edit communities context to add a block
 */
function links_og_enable(){

  //Add block in context
  //_add_block_context('communities','links-block','views','links-block', 'sidebar_first');
  _add_views_context('communities','links');
  _add_content_type_context('communities','links');
  
}


/*
 * hook_disable 
 * Edit communities context to remove block
 * Remove permissions
 */
function links_og_disable(){

  // Remove block
 // _remove_block_context('communities', 'links-block');
  _remove_views_context('communities', 'links');
  _remove_content_type_context('communities','links');
          
  // Disable permissions to OG roles ---------------------------------------------------------------  
  // Community Manager
  $cm_rid = get_og_rid('community_manager');
  og_role_revoke_permissions($cm_rid, array(
    'update own links content',
    'update any links content',
    'delete own links content',
    'delete any links content',
    'create links content',
  ));
    
  // Administrator Member
  $admm_rid = get_og_rid('administrator member');
  og_role_revoke_permissions($admm_rid, array(
    'update own links content',
    'update any links content',
    'delete own links content',
    'delete any links content',
    'create links content',
  ));
  
  // Member
  $mbr = get_og_rid('member');
  og_role_revoke_permissions($mbr, array(
      'create links content',
      'update own links content',
      'delete own links content',
  ));
 
}


/*
* hook_menu
*/
function links_og_menu() {
  $items = array();
 
  $items['community/%group_name/links'] = array(
    'title' => 'Links',
    'page callback' => 'views_page',
    'page arguments' => array('links', 'page', 1),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'menu-communities-menu',
    'weight' => 1,
  );

  return $items;
}


/*
* hook_views_pre_render
*/
function links_og_views_pre_render(&$view) {

  if($view->name == 'links' && $view->current_display == 'page' && user_access('create links content')) {
    $output = '';
    global $user;
    $og = og_context();
    if ($og) {
    
      $gid = $og->gid;
      $uid = $user->uid;
      
      $is_member = db_select('og_membership', 'ogm')
      ->fields('ogm')
      ->condition('gid', $gid,'=')
      ->condition('etid', $uid,'=')
      ->condition('entity_type', 'user','=')
      ->execute()
      ->fetchAssoc();
    
      if($is_member){
        $output .= l(t('Create a Link'), 'node/add/links', array('attributes' => array('type' => 'add', 'action_bar' => 'single', 'btn_group' => 'single'),'query' => array('gids_node[]' => $og->etid)));
      }
      //add menu to the exsiting  header
      if($view->header['area']){
        $view->header['area']->options['content'] = $view->header['area']->options['content'].$output;
      }
    }
  }
}

/**
* Implementation of hook_views_default_views_alter().
*/
function links_og_views_default_views_alter(&$views) {
  // Alter only the 'view_name_of_interest' view.
  if (array_key_exists('links', $views)) {
	  $view=$views['links'];
	 
	 /* Display: Master */
	  $handler = $view->display['page']->handler;
	  $handler->display->display_options['access']['type'] = 'og_context';
	  $handler->display->display_options['query']['type'] = 'views_query';
	  $handler->display->display_options['query']['options']['query_comment'] = FALSE;
	  $handler->display->display_options['path'] = 'community/links';
	  $handler->display->display_options['menu']['type'] = 'none';

	  /* Relationship: Group membership: Node group membership */
	  $handler->display->display_options['relationships']['og_membership_rel']['id'] = 'og_membership_rel';
	  $handler->display->display_options['relationships']['og_membership_rel']['table'] = 'node';
	  $handler->display->display_options['relationships']['og_membership_rel']['field'] = 'og_membership_rel';
	  $handler->display->display_options['relationships']['og_membership_rel']['required'] = 0;
	 
	  /* Contextual filter: OG membership: Group gid */
	  $handler->display->display_options['arguments']['group']['id'] = 'group';
	  $handler->display->display_options['arguments']['group']['table'] = 'og_membership';
	  $handler->display->display_options['arguments']['group']['field'] = 'group';
	  $handler->display->display_options['arguments']['group']['relationship'] = 'og_membership_rel';
	  $handler->display->display_options['arguments']['group']['default_action'] = 'default';
	  $handler->display->display_options['arguments']['group']['default_argument_type'] = 'og_context';
	  $handler->display->display_options['arguments']['group']['default_argument_skip_url'] = 0;
	  $handler->display->display_options['arguments']['group']['summary']['number_of_records'] = '0';
	  $handler->display->display_options['arguments']['group']['summary']['format'] = 'default_summary';
	  $handler->display->display_options['arguments']['group']['summary_options']['items_per_page'] = '25';
	  $handler->display->display_options['arguments']['group']['break_phrase'] = 0;
	  $handler->display->display_options['arguments']['group']['not'] = 0;

  }
}

 