<?php
/**
 * @file
 * Code for the communities feature.
 */

include_once('communities.features.inc');


/*
* hook_disable
*/
function communities_disable() {
  _disable_content_type('community');
  
   // revoke permissions to roles ----------------------------------------------------------------------------------------------------------------------------------------------
  $result = db_select('role', 'r')
    ->condition('name', "contributor",'=')
    ->fields('r', array('rid'))
    ->execute()
    ->fetchAssoc();

  user_role_revoke_permissions($result['rid'], array(  
    'create community content',
	'delete own community content',
	'edit own community content',  
  ));  
}


/*
* hook_enable
*/
function communities_enable() {  
}



/*
* hook_views_pre_render
*/
function communities_views_pre_render(&$view) {
  if($view->name == 'communities_directory') {
    $alphabet = array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z');
    $output = '<ul class="glossary">';
    foreach($alphabet as $letter) {
      $url = $_GET['q'].'/'.$letter;
      $output .= '<li>'.l($letter, $url).'</li>';
    }
	if(user_access('create community content'))  {
      $output .= '<div class="add_content">'.l(t('create a new community'),'node/add/community').'</div>';
	}
    $view->header['area']->options['content'] = $output;
  }
}



/*
* hook_init
*/
function communities_init() {
  drupal_add_css(drupal_get_path('module', 'communities') . '/communities.css');
}


/*
* hook_modules_enabled
*/
function communities_modules_enabled($modules) {
}


/*
* hook_node_type_insert
*/
function communities_node_type_insert($info) {
	if($info->type == 'community') {
      // add permissions to roles ----------------------------------------------------------------------------------------------------------------------------------------------
      $result = db_select('role', 'r')
        ->condition('name', "contributor",'=')
        ->fields('r', array('rid'))
        ->execute()
        ->fetchAssoc();

      user_role_grant_permissions($result['rid'], array(  
        'create community content',
	    'delete own community content',
	    'edit own community content',
		'view own unpublished content',
		'view revisions',
		'access workbench',
        'use workbench_moderation my drafts tab',
        'use workbench_moderation needs review tab',
        'view moderation messages', 
      )); 	
	}
}

/*
* hook_exit
*/
function communities_exit() {
  if($_GET['q'] == 'admin/structure/feature-set') {
    drupal_flush_all_caches();
  }
}
