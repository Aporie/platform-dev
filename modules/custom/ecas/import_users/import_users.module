<?php
// $Id$

/**
 * @file
 */

/**
 * Implementation of hook_perm().
 */
function import_users_perm() {
  return array('access import users function');
}

/**
 * Implementation of hook_init().
 */
function import_users_init() {
  drupal_add_css(drupal_get_path('module', 'import_users') . '/import_users.css');
}

/**
 * Implementation of hook_menu().
 */
function import_users_menu() {
  $items = array();

  $items['admin/user/user/import/%/%/%'] = array(
    'title' => 'Import users',
    'page callback' => 'import_users_content_user',
    'access arguments' => array('access import users function'),
    'page arguments' => array(4, 5, 6),
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/user/user/import'] = array(
    'title' => 'Import users',
    'page callback' => 'import_users_content',
    'access arguments' => array('access import users function'),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Generate the 'admin/user/user/import' page.
 */
function import_users_content() {
  // display tabs
  $output = theme('tabs_tabset', menu_local_tasks());

  // forms
  if (function_exists('getLdapEntries')) {
    $output .= drupal_get_form('ldap_form_user'); // search by lastname
  }
  else {
    $output .= t('Sorry, this function currently appears to be unavailable - please check the FPFIS_Common libraries setup.');
  }

  return $output;
}

/**
 * @return the base Distinguished Name that contains the groups within the LDAP
 */
function _import_users_groups_dn() {
  return defined('FPFIS_LDAP_BASE_DN_DG') ? constant('FPFIS_LDAP_BASE_DN_DG') : 'ou=Groups,o=cec.eu.int';
}

function ldap_form_user($form_state) {
  $result = getLdapEntries(_import_users_groups_dn(), 'cn=DG_*', array('cn'));

  $header = array('cn');
  $rows_dg = array('AAAA' => t('none'));

  for ($i = 0; $i <= $result['count']; ++ $i) {
    if ($result[$i]['cn'][0] != '') {
      $array_dg = explode('_', $result[$i]['cn'][0]);
      $rows_dg[$array_dg[1]] = $array_dg[1];
    }
  }

  ksort($rows_dg);

  $form['dg'] = array(
    '#type' => 'select',
    '#title' => t('Choose a DG'),
    //'#description' => t('Select a DG'),
    '#options' => $rows_dg,
    '#required' => FALSE
  );

  $form['search_by'] = array(
    '#type' => 'select',
    '#title' => t('Search by'),
    '#options' => array('lastname' => t('Lastname'), 'username' => t('Username')),
    '#required' => FALSE
  );

  $form['lastname'] = array(
    '#type' => 'textarea',
    '#cols' => 20,
    '#rows' => 3,
    '#title' => t('Lastname or username'),
    '#required' => FALSE,
    '#description' => t('You can search for several users by using the separator comma (,).'),
  );


  $list_country =  array_merge(array('zz' => t('none')), getCountryList());
  $form['country'] = array(
    '#type' => 'select',
    '#title' => t('Search by country'),
    '#options' => $list_country,
    '#required' => FALSE,
    '#default_value' => 'zz',
  );

  $form['mail'] = array(
    '#type' => 'textfield',
    '#title' => t('Search by mail'),
    '#required' => FALSE,
    '#description' => t('You can search by mail suffix, example : @ec.europa.eu'), 
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Search'),
  );

  return $form;
}


function ldap_form_user_validate($form, &$form_state) {
  if ($form_state['values']['lastname']=='' && $form_state['values']['dg']=='AAAA' && $form_state['values']['country']=='zz' && $form_state['values']['mail']=='') {
    form_set_error('', t('You must fill one of the form field.'));
  }
}


/// clean the content of the given value
function clean_name_field($value) {
  // replace every space or end of line by a comma
  $value = preg_replace('($|\s+)', ',', $value);
  // remove empty parts between commas
  $value = implode(',', preg_split('/,/', $value, -1, PREG_SPLIT_NO_EMPTY));
  return ($value);
}

function ldap_form_user_submit($form, &$form_state) {
  $form_state['redirect'] = sprintf(
    '%s/%s/%s/%s/%s/%s',
    rtrim($_GET['q'], '/'),
    clean_name_field($form_state['values']['lastname']),
    $form_state['values']['dg'],
    $form_state['values']['search_by'],
    $form_state['values']['country'],
    $form_state['values']['mail']
  );
}


function import_users_content_user() {
  $received_arguments = func_get_args();
  $import_arguments = array(
    'names'      => isset($received_arguments[0]) ? $received_arguments[0] : '',
    'dg'         => isset($received_arguments[1]) ? $received_arguments[1] : '',
    'search_by'  => isset($received_arguments[2]) ? $received_arguments[2] : '',
    'country'    => isset($received_arguments[3]) ? $received_arguments[3] : '',
    'mail'       => isset($received_arguments[4]) ? $received_arguments[4] : '',
  );

  // display tabs
  $output = theme('tabs_tabset', menu_local_tasks());
  $output .= drupal_get_form('import_users_form', $import_arguments);

  return $output;
}

/**
 * @param $form_state Array describing the form state
 * @param $search_arguments Array describing the search to do before displaying the form
 */
function import_users_form($form_state, $search_arguments) {
  global $pager_page_array, $pager_total, $pager_total_items;

  // extract will set $names, $dg, $search_by, $country and $mail
  extract($search_arguments);
  $names = trim($names);
  $search_by = ($search_by == 'username') ? 'uid' : 'cn';

  if (strpos($names, ',')) {
    $names = explode(',', $names);
  }

  if (is_array($names)) {
    $filter_names = '(|';
    foreach ($names as $name) {
      $name = trim($name);
      if (!empty($name)) {
        $filter_names .= "($search_by=$name*)";
      }
    }
    $filter_names .= ')';
  }
  else {
    $filter_names = "($search_by=$names*)";
  }

  $filters .= $filter_names;
  if ($country != 'zz')
    $filters .= "(c=$country*)";
  if ($mail != '')
    $filters .= "(mail=*$mail*)";

  $items_per_pages = 50;

  $page = isset($_GET['page']) ? $_GET['page'] : '';
  $pager_page_array = explode(',', $page);


  if ($dg == 'AAAA')
    $result = getLdapEntries(FPFIS_LDAP_BASE_DN,
                '(&' . $filters . '(|(employeeType=f)(employeeType=E)(employeeType=n))(recordStatus=a))',
                array('cn', 'givenname', 'dg', 'c', 'departmentnumber', 'o', 'uid', 'mail', 'sn')
    );
  else
    $result = getLdapEntries(FPFIS_LDAP_BASE_DN,
                '(&' . $filters . '(dg=' . $dg . ')(|(employeeType=f)(employeeType=E)(employeeType=n))(recordStatus=a))',
                array('cn', 'givenname', 'dg', 'c', 'departmentnumber', 'o', 'uid', 'mail', 'sn')
    );

  //if (count($result) == 0) {
  if ($result['count'] == 0) {
    //drupal_set_message(t('No user found'));
    $message = '<div class="messages status">' . t('No user found') . '</div>';
    $form['div_tag'] = array('#type' => 'markup', '#value' => $message);
  }
  else {
    drupal_add_js(drupal_get_path('module', 'import_users') . '/check_users.js');
    $pager_total_items[] = $result['count'];

    $header = array('cn', 'dg', 'departmentnumber');
    $rows = array();

    $form['fs'] = array(
      '#type' => 'fieldset',
      '#title' => t('List users LDAP'),
      '#tree' => TRUE,
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
    );

    $form['fs']['check_all_top'] = array(
      '#value' => '<a id="check_users_link_top" href="javascript:selectAllEcasUsers(true);">Check all users</a>',
      '#weight' => -42,
    );

    //print_r($result);
    //exit();

    //for ($i=0; $i<= $result['count']; $i++) {
    //for ($i=0; $i<= 30; $i++) {
    $i = 0;
    for ( ; $i< $items_per_pages; $i++) {
      $row['cn'] = $result[($page * $items_per_pages) + $i]['cn'][0];
      $row['dg'] = $result[($page * $items_per_pages) + $i]['dg'][0];
      $row['departmentnumber'] = $result[($page * $items_per_pages) + $i]['departmentnumber'][0];
      $row['domain'] = $result[($page * $items_per_pages) + $i]['o'][0];
      $rows[] = $row;

      if ($row['cn'] == '')
        break;

      $uid = $result[($page * $items_per_pages) + $i]['uid'][0];
      $mail = $result[($page * $items_per_pages) + $i]['mail'][0];

      $lastname = $result[($page * $items_per_pages) + $i]['sn'][0];
      $firstname = $result[($page * $items_per_pages) + $i]['givenname'][0];
      $country = $result[($page * $items_per_pages) + $i]['c'][0];

      $form['fs'][$i] = array(
        '#type' => 'checkbox',
        '#title' => $row['cn'] . '<div>' . $mail . '</div><div><b>username : </b>' . $uid . '</div><div><b>DG</b> : ' . $row['dg'] . '</div><div><b>domain</b> : ' . $row['domain'] . '</div><div><b>country : </b>' . $country . '</div>',
        '#return_value' => $uid . '|' . $row['cn'] . '|' . $mail . '|' . $firstname . '|' . $lastname,
        '#prefix' => '<div class="ldap_entry">',
        '#suffix' => '</div>',
      );
    }

    if ($i > 10) {
      $form['fs']['check_all_bottom'] = array(
        '#value' => '<a id="check_users_link_bottom" href="javascript:selectAllEcasUsers(true);">Check all users</a>',
        '#weight' => 42, 
      );
    }

    //$output .= theme('table', $header, $rows);

    //$pager_total[0] = ($result['count']%30==0) ? $result['count']/30 : (int)$result['count']/30 + 1;
    $pager_total[0] = ceil($result['count']/$items_per_pages);
    $pager_page_array[0] =
      max(0, min(
        (int)$pager_page_array[0],
        ((int)$pager_total[0]) - 1)
      );

    // Add the pager to the output.
    //$output .= theme('pager', NULL, $items_per_pages, 0);

    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Import'),
    );
  }

  return $form;
}


function import_users_form_submit($form, &$form_state) {
  $users = $form_state['values']['fs'];

  $imported_users = array();
  foreach ($users as $key => $value) {
    if ($value != '0') {
      list($uid, $cn, $mail, $firstname, $lastname) = explode('|', $value);
      $user_import = user_load(array('name' => $uid));
      if (!$user_import) { // if the user account doesn't exit
        $user_default = array(
          'name' => $uid,
          'pass' => user_password(),
          'init' => $uid,
          'status' => variable_get('import_users_default_status', 1), // 1 is "active", 0 is "blocked"
          'access' => time(),
          'mail' => variable_get('ecas_default_mail_address', ECAS_DEFAULT_MAIL_ADDRESS),
          'auth_ecas' => 'ecas_' . $uid,
        );

        // save user account
        $test_user = user_save('', $user_default);

        // save user profile data
        $user_imported = user_load(array('name' => $uid));
        ecas_sync_user_info(
          $user_imported,
          array(
            'mail' => $mail,
            'givenname' => $firstname,
            'sn' => $lastname,
          ),
          array('import_users_user_creation' => TRUE) // this allows other modules to detect a user creation
        );
        drupal_set_message(t('User !user_uid imported', array('!user_uid' => $uid)));
        $imported_users[] = $uid;
      }
      else {
        drupal_set_message(t('User !user_uid not imported', array('!user_uid' => $uid)));
      }
    }
  }
  module_invoke_all('ecas_users_imported', array('imported_users' => $imported_users));

  // tries to guess the original form url
  $matches = array();
  if (preg_match('/(.*import)\/.*$/', $_GET['q'], $matches)) {
    drupal_goto($matches[1]);
  }
  else {
    drupal_goto('admin/user/user/import');
  }
}
