<?php
  function multisite_drupal_toolbox_boot() {
    global $conf;

	if(!isset($conf["language_count"])) {
	  $conf["language_count"] = 2;	
	}
	else {
	  if($conf["language_count"] == 1 && $conf["language_default"]->language == 'en')
	      $conf["language_count"] = 2; // set language_count to 2 to force the display of the language prefix	
	}
  }
  
  
 
function multisite_drupal_toolbox_feature_set_api() {
  return array('version' => '1.0');
}

function _disable_content_type($type) {
  $type_info = node_type_load($type);
  $type_info->module = 'node';
  $type_info->custom = 1;
  $type_info->modified = 1;
  $type_info->locked = 0;
  $type_info->disabled = 1;
  node_type_save($type_info);
}


/**
* Add block to the context
*/
function multisite_drupal_toolbox_enable(){
	_add_block_context('site_wide','locale-language','locale','language','highlighted');	
}


/**
* Utility function to add block to a context
*/
function _add_block_context($contextName,$blockTitle,$module,$delta, $region,$weight='-10'){
	//Load context
	$context=module_invoke('context','load',$contextName); 
	//Make some modifications
	$blockToAdd = array(
			'module' => $module,
			'delta' =>  $delta,
			'region' => $region,
			'weight' => $weight,
					); 
	//Add modification to the context
	$context->reactions['block']['blocks'][$blockTitle]=$blockToAdd;	
	//Update the context
	module_invoke('context','save',$context);
}


/**
* Utility function to remove block from context
*/
function _remove_block_context($contextName,$blockTitle){	 
	//Load context
	$context=module_invoke('context','load',$contextName);	 
	//Remove element from the context
	unset($context->reactions['block']['blocks'][$blockTitle]);   
	//Update the context
	module_invoke('context','save',$context);
}


/**
* Utility function to add view to a context
*/
function _add_views_context($contextName,$viewTitle){
	//Load context
	$context=module_invoke('context','load',$contextName); 
	//Add modification to the context
	$context->conditions['views']['values'][$viewTitle]=$viewTitle;	
	//Update the context
	module_invoke('context','save',$context);
}

/**
* Utility function to remove block from context
*/
function _remove_views_context($contextName,$viewTitle){	 
	//Load context
	$context=module_invoke('context','load',$contextName);	 
	//Remove element from the context
	unset($context->conditions['views']['values'][$viewTitle]);   
	//Update the context
	module_invoke('context','save',$context);
}

/**
* Utility function to add content type from context
*/
function _add_content_type_context($context, $contentType){

	//Load context
	$context=module_invoke('context','load',$contextName); 
  //Add modification to the context
	$context->conditions['node']['values'][$contentType]=$contentType;
	//Update the context
	module_invoke('context','save',$context);
    
}

/**
* Utility function to remove content type from context
*/
function _remove_content_type_context($contextName,$contentType){
	
  //Load context
	$context=module_invoke('context','load',$contextName);	 
	//Remove element from the context
	unset($context->conditions['node']['values'][$contentType]);   
	//Update the context
	module_invoke('context', 'save', $context);
  
}