<?php
/**
 * @file
 * Code for the NextEuropa Metatags feature.
 */

/**
 * Implements hook_metatag_info().
 */
function nexteuropa_metatags_metatag_info() {
  $info['tags']['creator'] = array(
    'label' => t('Creator'),
    'description' => t(""),
    'class' => 'DrupalTextMetaTag',
    'context' => array('global'),
    'name' => 'creator'
  );
  $info['tags']['reference'] = array(
    'label' => t('Reference'),
    'description' => t(""),
    'class' => 'DrupalTextMetaTag',
    'context' => array('global'),
    'name' => 'reference'
  );
  $info['tags']['X-UA-Compatible'] = array(
    'label' => t('X-UA-Compatible'),
    'description' => t(""),
    'class' => 'DrupalTextMetaTag',
    'context' => array('global'),
    'name' => 'X-UA-Compatible'
  );
  $info['tags']['date'] = array(
    'label' => t('Date'),
    'description' => t(""),
    'class' => 'DrupalTextMetaTag',
    'context' => array('global'),
    'name' => 'date'
  );
  $info['tags']['classification'] = array(
    'label' => t('Classification'),
    'description' => t("IPG classification"),
    'class' => 'DrupalTextMetaTag',
    'context' => array('global'),
    'name' => 'classification'
  );

  $info['groups']['ESS_metatags'] = array(
    'label' => t('ESS metatags : metatags for ES indexation'),
  );

  $vocabulary = taxonomy_vocabulary_machine_name_load('metatags_ess_gf');
  $options = array();
  $terms = taxonomy_get_tree($vocabulary->vid);
  foreach ($terms as $term) {
    $term_full = taxonomy_term_load($term->tid);
    $options[$term_full->field_meta_value['und'][0]['value']] = str_repeat('-', $term->depth) . $term->name;
  }

  $info['tags']['ESS_GF'] = array(
    'label' => t('ESS GF'),
    'description' => t('Global search'),
    'class' => 'DrupalTextMetaTag',
    'group' => 'ESS_metatags',
    'form' => array(
      '#type' => 'select',
      '#options' => $options,
      '#empty_option' => t('- None -'),
    ),
    'select_or_other' => TRUE,
  );

  $info['tags']['ESS_RF'] = array(
    'label' => t('ESS RF'),
    'description' => t('Restricted search'),
    'class' => 'DrupalTextMetaTag',
    'group' => 'ESS_metatags',
  );

  return $info;
}

/**
 * Implements hook_variable_info().
 */
function nexteuropa_metatags_variable_info($options) {
  $variable['metatag_enable_taxonomy_term__classification'] = array(
    'title' => t('IPG classification', array(), $options),
    'description' => t('IPG classification', array(), $options),
    'type' => 'string',
    'token' => TRUE, 
  );
  return $variable;
}
