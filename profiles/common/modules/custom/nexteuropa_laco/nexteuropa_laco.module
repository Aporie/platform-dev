<?php

/**
 * @file
 * Module file.
 */

/**
 * Necessary to ensure compatibility with older versions of Registry Rebuild.
 *
 * @link https://www.drupal.org/project/registry_rebuild
 */
include_once 'src/LanguageCoverageService.php';

use Drupal\nexteuropa_laco\LanguageCoverageService as Service;

/**
 * Define default path exclusion list to remove tracking from admin pages.
 */
define('NEXTEUROPA_LACO_PAGES', "admin\nadmin/*\nbatch\nnode/add*\nnode/*/*\nuser/*/*");

/**
 * Implements hook_boot().
 */
function nexteuropa_laco_boot() {
  if (Service::isServiceRequest()) {
    Service::getInstance()->hookBoot();
  }
}

/**
 * Implements hook_init().
 */
function nexteuropa_laco_init() {
  if (Service::isServiceRequest()) {
    Service::getInstance()->hookInit();
  }
}

/**
 * Implements hook_permission().
 */
function nexteuropa_laco_permission() {
  return array(
    'administer nexteuropa laco settings' => array(
      'title' => t('Administer Nexteuropa LACO settings'),
      'description' => t('Perform maintenance tasks for LACO.'),
    ),
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function nexteuropa_laco_form_cce_basic_config_settings_form_alter(&$form, &$form_state) {
  $description = t('Enable the insertion of the Webtools LACO icons with content hyperlinks.');
  // Create fieldset 'LACO' inside webtools fieldset.
  $form['global']['laco'] = array(
    '#type' => 'fieldset',
    '#title' => t('LACO configuration'),
    '#weight' => 10,
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  if (module_exists('nexteuropa_metatags')) {
    $description .= '<br/><strong>For a better performance of the LACO icon feature, please enable the "Nexteuropa Metatags" module (nexteuropa_metatags)!</strong>';
  }
  $form['global']['laco']['nexteuropa_laco_enable_laco_icon_feature'] = array(
    '#title' => t('Enable the Language Coverage icon feature'),
    '#type' => 'checkbox',
    '#description' => $description,
    '#default_value' => variable_get('nexteuropa_laco_enable_laco_icon_feature'),
  );

  $form['global']['laco']['nexteuropa_laco_icon_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('Webtools LACO icon settings'),
    '#description' => t('For more information about the different parameters below, please consult the Webtools Language Coverage documentation'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
    '#states' => array(
      'visible' => array(
        ':input[name="nexteuropa_laco_enable_laco_icon_feature"]' => array(
          'checked' => TRUE,
        ),
      ),
    ),
  );

  $raw_default_value = variable_get(
    'nexteuropa_laco_icon_include',
    array(
      '#block-system-main',
      '#sidebar-left',
      '#sidebar-right',
      '.page-content aside',
    )
  );
  if (is_array($raw_default_value)) {
    $options = implode("\r\n", $raw_default_value);
  }
  else {
    $options = '';
  }
  $form['global']['laco']['nexteuropa_laco_icon_settings']['nexteuropa_laco_icon_include'] = array(
    '#type' => 'textarea',
    '#title' => t('Containers to be included for the icon generation'),
    '#default_value' => $options,
    '#required' => TRUE,
    '#description' => t(
      'Use any CSS selector 2.1 value to specify which links or containers are eligible. Set one selector per line.'
    ),
    '#rows' => 10,
  );
  $raw_default_value = variable_get('nexteuropa_laco_icon_exclude', '');
  if (is_array($raw_default_value)) {
    $options = implode("\r\n", $raw_default_value);
  }
  else {
    $options = '';
  }
  $form['global']['laco']['nexteuropa_laco_icon_settings']['nexteuropa_laco_icon_exclude'] = array(
    '#type' => 'textarea',
    '#title' => t('Containers to be excluded for the icon generation'),
    '#default_value' => $options,
    '#description' => t(
      'Use any CSS selector 2.1 value to specify which links or containers are eligible. Set one selector per line'
    ),
    '#rows' => 10,
  );

  $options = array(
    'any' => t('Any'),
    'other' => t('Other'),
    'false' => t('None (False)'),
  );
  $form['global']['laco']['nexteuropa_laco_icon_settings']['nexteuropa_laco_icon_document_coverage'] = array(
    '#type' => 'select',
    '#title' => t('LACO icons behaviours for documents'),
    '#default_value' => variable_get('nexteuropa_laco_icon_document_coverage', 'any'),
    '#options' => $options,
    '#description' => t('Defines how the LACO icon must be displayed beside files links.'),
  );

  $form['global']['laco']['nexteuropa_laco_icon_settings']['nexteuropa_laco_icon_page_coverage'] = array(
    '#type' => 'select',
    '#title' => t('LACO icons behaviours for pages'),
    '#default_value' => variable_get('nexteuropa_laco_icon_page_coverage', 'any'),
    '#options' => $options,
    '#description' => t('Defines how the LACO icon must be displayed beside HTML page links.'),
  );

  $form['global']['laco']['nexteuropa_laco_icon_settings']['nexteuropa_laco_icon_language_coverage'] = array(
    '#type' => 'select',
    '#title' => t('Languages covered by the LACO icon'),
    '#default_value' => variable_get('nexteuropa_laco_icon_language_coverage', 'eu'),
    '#options' => array(
      'eu' => t('Official EU languages only'),
      'All' => t('Official EU languages + non-official ones supported by LACO'),
    ),
    '#description' => t(
      'Defines which languages are covered with the LACO icon. The supported non-official languages are SQ, AR, HY, BE, HE, HI, IS, JA, NO, MK, RU, TR, UR, VI, ZH.'
    ),
  );

  $form['global']['laco']['nexteuropa_laco_icon_settings']['nexteuropa_laco_icon_type'] = array(
    '#type' => 'select',
    '#title' => t('LACO icon type'),
    '#default_value' => variable_get('nexteuropa_laco_icon_type', 'dot'),
    '#options' => array(
      'dot' => t('Display only 3 dots icon ( ••• )'),
      'all' => t('Display the current language (iso code) of the link following by 3 dots icons ( FR | ••• )'),
    ),
    '#description' => t(
      'Defines the type of LACO that will be used in the icon display.'
    ),
  );

  // Pages visibility settings.
  $form['global']['laco']['nexteuropa_laco_icon_settings']['page_vis_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('Pages where the LACO icon feature must be active'),
  );
  $options = array(
    t('Every page except the listed pages'),
    t('The listed pages only'),
  );
  $form['global']['laco']['nexteuropa_laco_icon_settings']['page_vis_settings']['nexteuropa_laco_visibility_pages'] = array(
    '#type' => 'radios',
    '#title' => t('Add tracking to specific pages'),
    '#options' => $options,
    '#default_value' => variable_get('nexteuropa_laco_visibility_pages', 0),
  );

  $description = t("Specify pages by using their paths. Enter one path per line. The '*' character is a wildcard. Example paths are %blog for the blog page and %blog-wildcard for every personal blog. %front is the front page.", array(
    '%blog' => 'blog',
    '%blog-wildcard' => 'blog/*',
    '%front' => '<front>',
  ));
  $form['global']['laco']['nexteuropa_laco_icon_settings']['page_vis_settings']['nexteuropa_laco_excluded_paths'] = array(
    '#type' => 'textarea',
    '#default_value' => variable_get('nexteuropa_laco_excluded_paths', NEXTEUROPA_LACO_PAGES),
    '#description' => $description,
  );

  $form['#validate'][] = '_nexteuropa_laco_admin_validate';
  return $form;

}

/**
 * Validation callback for the NextEuropa LACO settings form.
 *
 */
function _nexteuropa_laco_admin_validate($form, &$form_state) {
  $values = &$form_state['values'];
  $values['nexteuropa_laco_icon_include'] = explode("\r\n", $values['nexteuropa_laco_icon_include']);
  $values['nexteuropa_laco_icon_exclude'] = explode("\r\n", $values['nexteuropa_laco_icon_exclude']);
}

/**
 * Implements hook_page_alter().
 *
 * This adds the webtools smartloader js to the head of normal page.
 */
function nexteuropa_laco_page_alter(&$page) {
  _nexteuropa_laco_add_load_js_to_page();
}

/**
 * Implements hook_process_html().
 *
 * Add the custom instance variables. That has to be done in the footer region.
 * drupal_add_js won't work as we need application/json.
 */
function nexteuropa_laco_process_html(&$vars) {
  $script = _nexteuropa_laco_generate_json();
  $vars['page_bottom'] .= drupal_render($script);
}

/**
 * Helper function to generate the required json.
 */
function _nexteuropa_laco_generate_json() {
  if (!_nexteuropa_laco_visibility_pages()) {
    return;
  }

  // Create settings array.
  $selectors = variable_get(
    'nexteuropa_laco_icon_include',
    array(
      '#block-system-main',
      '#sidebar-left',
      '#sidebar-right',
      '.page-content aside',
    )
  );
  $webtools_laco_settings = array(
    'service' => 'laco',
    'include' => implode(', ', $selectors),
    'coverage' => array(
      'document' => variable_get('nexteuropa_laco_icon_document_coverage', 'any'),
      'page' => variable_get('nexteuropa_laco_icon_page_coverage', 'any'),
    ),
    'language' => variable_get('nexteuropa_laco_icon_language_coverage', 'eu'),
    'icon' => variable_get('nexteuropa_laco_icon_type', 'dot'),
  );

  $selectors = variable_get('nexteuropa_laco_icon_exclude', array());
  if (!empty($selectors) && !empty($selectors[0])) {
    $webtools_laco_settings['exclude'] = implode(', ', $selectors);
  }

  $webtools_laco_settings = strip_tags(drupal_json_encode($webtools_laco_settings));

  return array(
    '#type' => 'html_tag',
    '#tag' => 'script',
    '#attributes' => array(
      'type' => 'application/json',
    ),
    '#weight' => '99999',
    '#value' => $webtools_laco_settings,
  );
}

/**
 * Injects the webtools load.js file to a page if the conditions are met.
 *
 * @see nexteuropa_laco_page_alter()
 */
function _nexteuropa_laco_add_load_js_to_page() {
  if (!_nexteuropa_laco_visibility_pages()) {
    return;
  }

  // Loading variables.
  $smartloader_prurl = variable_get('nexteuropa_smartloader_prurl', '//europa.eu/webtools/load.js');

  // Add smart loader.
  // Ensure to use a PR URL (compatibility for http/https).
  $smartloader_prurl = preg_replace("#^https?:#", "", $smartloader_prurl);

  drupal_add_js($smartloader_prurl, array(
    'type' => 'external',
    'scope' => 'header',
    'defer' => TRUE,
    'weight' => 5,
  ));
}

/**
 * Checks if the LACO icon should be enabled for the current page.
 *
 * @return bool
 *   TRUE if the LACO icon must be displayed.
 */
function _nexteuropa_laco_visibility_pages() {
  static $display;

  if (isset($display)) {
    return $display;
  }

  // Cache visibility setting in hook_init for hook_footer.
  $display = 0;

  // If it is not configured so, we exclude any LACO icon display.
  $enabled = variable_get('nexteuropa_laco_enable_laco_icon_feature', FALSE);
  if (!$enabled) {
    return $display;
  }

  // Exclude directly the 404 and 403 pages.
  $status = drupal_get_http_header('Status');
  if (('404 Not Found' == $status) || ('403 Forbidden' == $status)) {
    return $display;
  }

  $setting_pages = variable_get('nexteuropa_laco_excluded_paths', NEXTEUROPA_LACO_PAGES);
  $is_global_visibility = variable_get('nexteuropa_piwik_visibility_pages', 0);

  if (empty($setting_pages) && !$is_global_visibility) {
    return $display;
  }

  // Convert path to lowercase. This allows comparison of the same path
  // with different case. Ex: /Page, /page, /PAGE.
  $pages = drupal_strtolower($setting_pages);
  // Convert the Drupal path to lowercase.
  $path = drupal_strtolower(drupal_get_path_alias());
  // Compare the lowercase internal and lowercase path alias (if any).
  $display = drupal_match_path($path, $pages);
  if ($path != $_GET['q']) {
    $display = ($display || drupal_match_path($_GET['q'], $pages));
  }
  // When $visibility has a value of 0, the tracking code is displayed on
  // all pages except those listed in $pages. When set to 1, it
  // is displayed only on those pages listed in $pages.
  $display = !($is_global_visibility xor $display);

  return $display;
}
