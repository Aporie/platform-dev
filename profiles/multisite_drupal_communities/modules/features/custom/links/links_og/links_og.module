<?php
/**
 * @file
 * Code for the Links feature.
 */

include_once('links_og.features.inc');
include_once('links_og.views_alter.inc');

/*
* hook_menu
*/
function links_og_menu() {
  $items = array();
 
  $items['community/%group_name/links'] = array(
    'title' => 'Links',
    'page callback' => 'views_page',
    'page arguments' => array('links', 'page', 1),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'menu-communities-menu',
    'weight' => 1,
  );

  return $items;
}


/*
* hook_views_pre_render
*/
function links_og_views_pre_render(&$view) {

  if ($view->name == 'links' && $view->current_display == 'page' && user_access('create links content')) {
    $output = '';
    global $user;
    $og = og_context();
    if ($og) {
      $gid = $og->gid;
      $uid = $user->uid;
      
      $is_member = db_select('og_membership', 'ogm')
      ->fields('ogm')
      ->condition('gid', $gid, '=')
      ->condition('etid', $uid, '=')
      ->condition('entity_type', 'user', '=')
      ->execute()
      ->fetchAssoc();
    
      if($is_member){
        $output .= l(t('Create a Link'), 'node/add/links', array('attributes' => array('type' => 'add', 'action_bar' => 'single', 'btn_group' => 'single'), 'query' => array('gids_node[]' => $og->etid)));
      }
      //add menu to the exsiting  header
      if ($view->header['area']) {
        $view->header['area']->options['content'] = $view->header['area']->options['content'] . $output;
      }
    }
  }
}

 
