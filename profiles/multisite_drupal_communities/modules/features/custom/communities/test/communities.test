<?php

/**
 * @file
 * Tests for communities.module.
 */


/**
 * Defines a base class for testing the "communities" module.
 */
class CommunitiesWebTestCase extends DrupalWebTestCase {
  
  protected $community_user;
  protected $admin_user;
  
  protected $profile = 'multisite_drupal_communities';
  
  public $field_names = array();
  
  public static function getInfo() {
    return array(
      'name' => 'Communities',
      'description' => 'Test the communities feature.',
      'group' => 'Multisite communities',
    );
  }

  function setUp() {
    parent::setUp(array(
    ));
  
    $this->admin_user = $this->drupalCreateUserWithRole("administrator");
  }

  function testCommunitiesInstall() {
    // check the communities directory view
    $this->drupalGet('communities_directory');
    $this->assertResponse(200);
    $this->assertRaw('view-communities-directory', 'Communities enabled and accessible.');
    
    // check the community creation
    $this->drupalLogin($this->admin_user);
    
    /*
    $node_array = array(
      'title' => 'Community test1',
      'body[und][0][value]' => 'Community body',
    );
    $this->drupalPost('node/add/community', $node_array, t('Save'));
    */
    $settings = array(
      'type' => 'community',
      'title' => 'Community test1',
      'body' => array(LANGUAGE_NONE => array(array('Community body'))),
    );
    $node = $this->drupalCreateNode($settings);
    $this->drupalGet('community/community-test1');
    
    $this->assertRaw('Community test1', t('Community created.'));
    $this->assertRaw('Home page', t('Community block created.'));
    $this->assertRaw('members list', t('Community block members list created.'));
  
    // create an article in the community
    /*
    $node_array = array(
      'title' => 'Article test1',
      'body[und][0][value]' => 'Article body',
      'og_group_ref[und][0][target_id]' => $node->nid,
    );
    $this->drupalPost('node/add/article', $node_array, t('Save'));
    */
    $field = array();
    $field[LANGUAGE_NONE][0]['target_id'] = $node->nid;
    $settings = array(
      'type' => 'article',
      'title' => 'Article test1',
      'body' => array(LANGUAGE_NONE => array(array('Article body'))),
      'og_group_ref' => $field,
    );
    $node = $this->drupalCreateNode($settings);
    $this->drupalGet('community/community-test1/articles/article-test1');    
    
    $this->assertRaw('Article test1', t('Article created.'));
  }
  
  
  /**
  * Creates a user with the give role.
  **/
  public function drupalCreateUserWithRole($role) {
    // Get all of the roles in the system.
    $roles = user_roles();

    // Find the index for the role we want to assign to the user.
    $index = array_search($role, $roles);

    // Get the permissions for the role.
    $permissions = user_role_permissions(array(array_search($role, $roles) => $role));
  
    // Create the user with the permissions.
    $user = $this->drupalCreateUser(array_keys($permissions[$index]));
  
    // Assign the role.
    $user->roles[$index] = $role;
  
    // Return the user we have created.
    return user_save($user);
  }
  
}



