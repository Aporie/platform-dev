<?xml version="1.0" encoding="UTF-8"?>
<project name="projectname" default="main" phingVersion="2.5">

  <!-- ============================================  -->
  <!-- Target: hello                                 -->
  <!-- ============================================  -->

  <target name="hello" description="Says Hello" depends="init">
    <echo msg="Hello, world!" />
    <echo msg="${phing.dir}" />
  </target>

  <!-- ============================================  -->
  <!-- Target: main                                  -->
  <!-- ============================================  -->

  <!-- This is the default target. -->

  <target name="main" depends="init">

    <if>
      <available file="${project.drupal.dir}" type="dir" />
      <then>
        <phingcall target="update" />
      </then>
      <else>
        <phingcall target="build" />
      </else>
    </if>

  </target>

  <!-- ============================================  -->
  <!-- Target: build                                 -->
  <!-- ============================================  -->

  <!-- Do a complete build of the project by verifying code
       consistency and and performing static analysis of the code. -->

  <target name="build" depends="init, make, site-install" />

  <!-- ============================================  -->
  <!-- Target: qa                                    -->
  <!-- ============================================  -->

  <target name="qa" depends="init, run-tests, cs" />

  <!-- ============================================  -->
  <!-- Target: run-tests                             -->
  <!-- ============================================  -->

  <target name="run-tests" depends="init">

    <!-- Runs a lightweight built in http server for testing. -->
    <!-- <drush command="rs"> -->
    <!--   <option name="server">builtin</option> -->
    <!--   <param>localhost:9000</param> -->
    <!-- </drush> -->

    <exec command="${phing.dir}/bin/behat --ansi --format pretty,junit --out ,${project.testdir}" passthru="true" />
  </target>



  <!-- ============================================  -->
  <!-- Target: simpletests                           -->
  <!-- ============================================  -->

  <target name="simpletests" depends="init, setup-phing-drush">
    <drush command="pm-enable" assume="yes">
      <param>${multisite.modules} coder_review simpletest</param>
      <param>${project.modules.custom}</param>
    </drush>
    <if>
      <isset property="drupal.uri" />
      <then>
        <drush command="test-run" uri="${drupal.uri}" haltonerror="false">
          <param>Aggregator,Block,Comment,Color,Contact,Field,Field_ui,File,Filter,Content translation,Contextual links</param>

          <option name="xml">${project.logdir}/tests</option>
        </drush>
      </then>
    </if>

  </target>


  <!-- ============================================  -->
  <!-- Target: update                                -->
  <!-- ============================================  -->

  <target name="update" depends="init, setup-phing-drush">

    <drush command="pm-enable" assume="yes">
      <param>${project.theme}</param>
      <param>${multisite.modules} coder_review simpletest</param>
      <param>${project.modules.custom}</param>
    </drush>

    <drush command="updatedb" assume="yes" />

    <drush command="cache-clear" assume="yes">
      <param>all</param>
    </drush>

    <drush command="features-revert" assume="yes">
      <param>${project.modules.custom}</param>
    </drush>

<!--    <drush command="test-run" uri="${drupal.uri}" haltonerror="false">
      <param>Anonymous Notification</param>
      <option name="xml">${project.logdir}/tests</option>
    </drush>
-->

   <!-- for multilingual sites -->
  <!--   <phingcall target="update-translations" /> -->

    <drush command="cache-clear" assume="yes">
      <param>all</param>
    </drush>

  </target>

  <!-- ============================================  -->
  <!-- Target: update-translations                   -->
  <!-- ============================================  -->

  <target name="update-translations" depends="init, setup-phing-drush">
    <drush command="l10n-update-refresh" />
    <drush command="l10n-update" />
  </target>

  <!-- ============================================  -->
  <!-- Target: make                                  -->
  <!-- ============================================  -->

  <target name="make" depends="load-properties, setup-phing-drush"
          if="drupal.make.file">

    <!-- Delete any pre-existing builds -->
    <if>
      <available file="${project.drupal.dir}" type="dir" />
      <then>
        <chmod file="${project.drupal.dir}/sites/default" mode="0777" failonerror="false" />
        <delete dir="${project.drupal.dir}" />
      </then>
    </if>

    <drush command="make" assume="yes">
      <param>${drupal.make.file}</param>
      <param>${drupal.make.dir}</param>
      <!-- <option name="contrib-destination">${project.code.dir}</option> -->
    </drush>

    <mkdir dir="${project.drupal.dir}/sites/all/modules/contributed" />
    <mkdir dir="${project.drupal.dir}/sites/all/modules/custom" />
    <mkdir dir="${project.drupal.dir}/sites/all/modules/modified" />
    <mkdir dir="${project.drupal.dir}/sites/all/modules/features" />
    <mkdir dir="${project.drupal.dir}/sites/default/files/private_files" />

    <!-- PROJECTNAME -->
    <symlink target="${project.basedir}/modules/projectname" link="${project.drupal.dir}/sites/all/modules/custom/projectname" />
    <symlink target="${project.basedir}/themes/project_theme" link="${project.drupal.dir}/sites/all/themes/project_theme" />
    <symlink target="${project.basedir}/translations" link="${project.drupal.dir}/sites/all/translations" />

    <!-- MULTISITE profiles -->
    <symlink link="${project.drupal.dir}/profiles">
      <fileset dir="${multisite.base.dir}/profiles">
        <include name="*" />
      </fileset>
    </symlink>

    <!-- MULTISITE themes -->
    <symlink link="${project.drupal.dir}/sites/all/themes">
      <fileset dir="${multisite.base.dir}/sites/all/themes">
        <include name="*" />
      </fileset>
    </symlink>

    <!-- MULTISITE libraries -->
    <symlink link="${project.drupal.dir}/sites/all/libraries">
      <fileset dir="${multisite.base.dir}/sites/all/libraries">
        <include name="*" />
      </fileset>
    </symlink>

    <!-- MULTISITE modules -->
    <symlink link="${project.drupal.dir}/sites/all/modules/custom">
      <fileset dir="${multisite.base.dir}/sites/all/modules/custom">
        <include name="*" />
      </fileset>
    </symlink>

    <symlink link="${project.drupal.dir}/sites/all/modules/modified">
      <fileset dir="${multisite.base.dir}/sites/all/modules/modified">
        <include name="*" />
      </fileset>
    </symlink>

    <symlink link="${project.drupal.dir}/sites/all/modules/features">
      <fileset dir="${multisite.base.dir}/sites/all/modules/features/custom">
        <include name="*" />
      </fileset>
    </symlink>

    <!-- Copy default images in files/ folder -->
    <copy todir="${project.drupal.dir}/sites/default/files">
      <fileset dir="${multisite.base.dir}/sites/default/files/default_images" />
    </copy>

    <!-- Apply patches -->
    <foreach param="filename" absparam="absfilename" target="apply-patch">
      <fileset dir="${multisite.patch.dir}">
        <include name="*.patch" />
      </fileset>
    </foreach>

  </target>

  <!-- ============================================  -->
  <!-- Target: apply-patch                           -->
  <!-- ============================================  -->

  <target name="apply-patch">

    <echo msg="Apply patch ${absfilename}" />
    <!-- <patch patchfile="${absfilename}" dir="${drupal.make.dir}" -->
    <!--        backups="true" haltonfailure="true" /> -->

    <exec command="patch --directory=${drupal.make.dir} --batch -p0 --backup --input=${absfilename}" 
          passthru="true" />

  </target>

  <!-- ============================================  -->
  <!-- Target: site-install                          -->
  <!-- ============================================  -->

  <target name="site-install" depends="init, setup-phing-drush"
          unless="project.installed">

    <drush command="site-install" assume="yes">
      <option name="db-url">${drupal.db.url}</option>
      <!-- <option name="sites-subdir">${drupal.db.url}</option> -->
      <option name="account-name">${drupal.account.name}</option>
      <option name="account-pass">${drupal.account.pass}</option>
      <option name="account-mail">${drupal.account.mail}</option>
      <option name="site-name">${drupal.site.name}</option>
      <option name="site-mail">${drupal.site.mail}</option>
      <option name="clean-url">1</option>
      <option name="db-su">${drupal.db.su}</option>
      <option name="db-su-pw">${drupal.db.su.pw}</option>
      <param>${drupal.profile}</param>
    </drush>

    <drush command="pm-enable" assume="yes">
      <param>${project.theme}</param>
      <param>${multisite.modules}</param>
      <param>${project.modules.custom}</param>
    </drush>

    <drush command="vset" assume="yes">
      <param>theme_default ${project.theme}</param>
    </drush>

<!--    <phingcall target="update-translations" /> -->
    <phingcall target="setup-permissions" />

<!--    <phingcall target="generate-content" />-->

    <!-- Set property to prevent target from being executed multiple times -->
    <property name="project.installed" value="true"/>

  </target>

  <!-- ============================================  -->
  <!-- Target: generate-content                      -->
  <!-- ============================================  -->

  <target name="generate-content" depends="init, setup-phing-drush">

    <drush command="dev-generate-users" />

    <!-- Assign "ec_editor" role to Delphine Lepers -->
    <drush command="user-add-role" assume="yes">
      <param>"ec_editor"</param>
      <param>leperde</param>
    </drush>

  </target>

  <!-- ============================================  -->
  <!-- Target: phploc                                -->
  <!-- ============================================  -->

  <target name="phploc" depends="init">

    <phploc reportType="csv"
            reportName="phploc" resportDirectory="${project.logdir}"
            suffixes="php,module,inc,install,profile,test" countTests="true">
      <fileset refid="src.php.custom" />
    </phploc>

  </target>

  <!-- ============================================  -->
  <!-- Target: cs                                    -->
  <!-- ============================================  -->

  <target name="cs" depends="init">

    <delete dir="${project.logdir}"/>
    <mkdir dir="${project.logdir}"/>

    <foreach target="coder-review" param="coder.review.type"
             list="comment,i18n,security,sql,style" />

  </target>

  <!-- ============================================  -->
  <!-- Target: coder-review                          -->
  <!-- ============================================  -->

  <target name="coder-review" depends="setup-phing-drush">

    <echo msg="Review '${coder.review.type}' coding style" />

    <drush command="coder-review" assume="yes" pipe="yes"
           returnProperty="xml" haltonerror="no">
      <option name="${coder.review.type}" />
      <option name="no-empty" />
      <option name="minor" />
      <option name="checkstyle" />
      <param>${project.modules.custom}</param>
      <param>${project.theme}</param>
    </drush>

    <property name="coderreview.checkstyle.file"
              value="${project.logdir}/checkstyle-${coder.review.type}.xml" />
    
    <append destFile="${coderreview.checkstyle.file}" text="${xml}" />

  </target>

  <!-- ============================================  -->
  <!-- Target: simpletests                           -->
  <!-- ============================================  -->

  <target name="simpletests" depends="setup-phing-drush">
    <drush command="test-run" uri="{$drupal.uri}" root="${project.drupal.dir}">
      <param>AAA</param>
    </drush>
  </target>


  <!-- ============================================  -->
  <!-- Target: phpmd                                   -->
  <!-- ============================================  -->

  <target name="phpmd">

    <phpmd file="${project.basedir}/${source}/www">
      <formatter type="xml" outfile="${project.basedir}/build/phpmd.xml" />
    </phpmd>
  </target>

  <!-- ============================================  -->
  <!-- Target: init                                  -->
  <!-- ============================================  -->

  <!-- Initialization: This target sets up many of the common
       resources used throughout the build. -->

  <target name="init" depends="load-properties, setup-dirs, setup-filesets" unless="project.initialized">

    <!-- Set property to prevent target from being executed multiple times -->
    <property name="project.initialized" value="true"/>

  </target>

  <!-- ============================================  -->
  <!-- Target: load-properties                       -->
  <!-- ============================================  -->

  <target name="load-properties">

    <property file="${phing.dir}/build.default.properties" />
    <property file="${phing.dir}/build.properties" override="true" />
    <property name="project.basedir" value="${phing.dir}" />
    <property name="project.logdir" value="${project.builddir}/logs" />
    <property name="project.testdir" value="${project.logdir}/tests" />
    <property name="multisite.patch.dir" value="${project.basedir}/${multisite.base.dir}/patches" />

  </target>

  <!-- ============================================  -->
  <!-- Target: setup-dirs                            -->
  <!-- ============================================  -->

  <target name="setup-dirs" depends="load-properties">

    <property name="project.drupal.dir"
              value="${project.basedir}/${drupal.make.dir}" />

    <property name="project.sitesdir"
              value="${project.drupal.dir}/${project.code.dir}" />

    <property name="project.builddir"
              value="${project.basedir}/build" />

    <property name="project.toolsdir"
              value="${project.builddir}/tools" />

    <property name="project.coveragedir"
              value="${project.builddir}/coverage" />

    <property name="project.logdir"
              value="${project.builddir}/logs" />

    <property name="project.testdir"
              value="${project.logdir}/tests" />

  </target>

  <!-- ============================================  -->
  <!-- Target: setup-filesets                        -->
  <!-- ============================================  -->

  <!-- Setup file sets - patterns for different aspects of the source
       code. These are used in other targets. -->

  <target name="setup-filesets" depends="load-properties">

    <!-- PHP files -->

    <patternset id="php">
      <include name="**/*.php" />
      <include name="**/*.module" />
      <include name="**/*.install" />
      <include name="**/*.inc" />
      <include name="**/*.profile" />
      <include name="**/*.test" />
    </patternset>

    <!-- Javascript files. Minimized JavaScript files should not be
         analyzed. In their optimized state they can not be expexted
         to conform to coding standards. -->

    <patternset id="js">
      <include name="**/*.js" />
      <exclude name="**/*.min.js" />
    </patternset>

    <!-- CSS files -->

    <patternset id="css">
      <include name="**/*.css" />
    </patternset>

    <!-- Directories for community contributed code. We exclude these
         from code analysis as we cannot be held responsible for any
         problems here. -->

    <patternset id="contrib">
      <exclude name="**/contrib/**/*.*" />
      <exclude name="**/libraries/**/*.*" />
    </patternset>

    <!-- We exclude generated files from We exclude these from code
         analysis as we cannot be held responsible for any problems
         here. -->

    <patternset id="generated">
      <exclude name="**/*.features.*" />
      <exclude name="**/*.field_group.inc" />
      <exclude name="**/*.layouts.inc" />
      <exclude name="**/*.pages_default.inc" />
      <exclude name="**/*.panelizer.inc" />
      <exclude name="**/*.panels_default.inc" />
      <exclude name="**/*.strongarm.inc" />
      <exclude name="**/*.views_default.inc" />
    </patternset>

    <!-- Define file sets for future reference -->

    <!-- All PHP files -->
    <fileset id="src.php" dir="${project.drupal.dir}">
      <patternset refid="php"/>
    </fileset>

    <!-- Custom PHP files -->
    <fileset id="src.php.custom" dir="${project.sitesdir}">
      <patternset refid="php"/>
      <patternset refid="contrib"/>
      <patternset refid="generated"/>
    </fileset>

    <!-- All Javascript files -->
    <fileset id="src.js" dir="${project.drupal.dir}">
      <patternset refid="js" />
    </fileset>

    <!-- Custom Javascript files -->
    <fileset id="src.js.custom" dir="${project.sitesdir}">
      <patternset refid="js" />
      <patternset refid="contrib" />
    </fileset>

    <!-- All CSS files -->
    <fileset id="src.css" dir="${project.basedir}">
      <patternset refid="css" />
    </fileset>

    <!-- Custom CSS files -->
    <fileset id="src.css.custom" dir="${project.sitesdir}">
      <patternset refid="css" />
      <patternset refid="contrib" />
    </fileset>

  </target>

  <!-- ============================================  -->
  <!-- Target: clean                                 -->
  <!-- ============================================  -->

  <target name="clean" depends="setup-dirs" unless="project.cleaned"
          description="Clean up and create artifact directories">

    <delete dir="${project.toolsdir}"/>
    <delete dir="${project.coveragedir}"/>
    <delete dir="${project.logdir}"/>
    <delete dir="${project.testdir}"/>

    <mkdir dir="${project.toolsdir}"/>
    <mkdir dir="${project.coveragedir}"/>
    <mkdir dir="${project.logdir}"/>
    <mkdir dir="${project.testdir}"/>

    <property name="project.cleaned" value="true"/>

  </target>

  <!-- ============================================  -->
  <!-- Target: setup-permissions                     -->
  <!-- ============================================  -->

  <target name="setup-permissions" depends="setup-dirs">

      <chmod mode="0777" failonerror="false">
        <fileset dir="${project.drupal.dir}/sites/default/files" />
      </chmod>

  </target>

  <!-- ============================================  -->
  <!-- Target: setup-phing-drush                     -->
  <!-- ============================================  -->

  <target name="setup-phing-drush" depends="setup-dirs">

    <!-- Clone the project -->
    <phingcall target="setup-git-repo">
      <property name="repo.dir"
                value="${project.toolsdir}/phingdrushtask"/>
      <property name="repo.url"
                value="${phing.drush.repository.url}" />
      <property name="repo.revision"
                value="${phing.drush.repository.revision}" />
    </phingcall>

    <!-- Register as custom Phing task -->
    <taskdef name="drush" classname="DrushTask"
             classpath="${project.toolsdir}/phingdrushtask" />

    <!-- Run drush from the project Drupal directory -->
    <property name="drush.root" value="${project.drupal.dir}"/>

    <!-- Use Drush installed by composer -->
    <property name="drush.bin" value="${phing.dir}/bin/drush"/>

    <!-- Assume yes by default -->
    <property name="drush.assume" value="yes"/>

  </target>

  <!-- ============================================  -->
  <!-- Target: setup-git-repo                        -->
  <!-- ============================================  -->

  <target name="setup-git-repo">

    <if>
      <not><available file="${repo.dir}" /></not>
      <then>

        <property name="repo.revision" value="HEAD" override="false"/>

        <echo>Cloning ${repo.url} ${repo.revision} into ${repo.dir}</echo>

        <exec command="git clone ${repo.url} ${repo.dir}" />
        <exec command="git checkout ${repo.revision}" dir="${repo.dir}"/>
      </then>
    </if>
  </target>

  <!-- ============================================  -->
  <!-- Target: create-tag                            -->
  <!-- ============================================  -->

  <target name="create-tag" depends="init">
    
  </target>

  <!-- ============================================  -->
  <!-- Target: dump                                  -->
  <!-- ============================================  -->

  <target name="dump" depends="init, setup-phing-drush">

    <property name="dump.filename" value="dump-$(date +%Y-%m-%d-%H.%M.%S).sql" override="false"/>

    <drush command="sql-dump" assume="yes">
      <option name="result-file">${phing.dir}/${dump.filename}</option>
      <option name="gzip" />
    </drush>
  </target>

</project>
