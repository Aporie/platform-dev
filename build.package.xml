<?xml version="1.0" encoding="UTF-8" ?>

<project name="NextEuropa" default="help">

    <!-- If `build.properties.local` exists then we want it badly -->
    <property file="build.properties.local" />
    <property file="build.properties" />
    <property file="build.properties.dist" />

    <echo msg="Loading Drush task." />
    <taskdef name="drush" classname="DrushTask" />

    <!-- Delete the previous build. -->
    <target name="delete-platform">
        <!--
            During the Drupal installation process the settings folder is write
            protected. Ensure it is writeable so it can be removed.
         -->
        <if>
            <available file="${platform.build.settings.dir}" type="dir" />
            <then>
                <chmod mode="0777" failonerror="false" verbose="false" quiet="true">
                    <fileset dir="${platform.build.settings.dir}" />
                </chmod>
            </then>
        </if>

        <echo msg="Delete previous build." />
        <delete dir="${phing.project.build.dir}" includeemptydirs="true" failonerror="false" />
    </target>

    <!-- Make Drupal core. -->
    <target name="make-drupal-core">
        <!--
            Drupal core is created in a separate target because Drush make only
            allows to build in a pre-existing folder if the 'no-core' option is
            set.
        -->
        <echo msg="Make Drupal core." />
        <drush
            command="make"
            assume="yes"
            bin="${drush.bin}"
            pipe="yes"
            verbose="${drush.verbose}"
            root="${platform.build.dir}">
            <param>${drupal.make}</param>
            <param>${platform.build.dir}</param>
            <option name="no-patch-txt"></option>
        </drush>
    </target>

    <!-- Make the platform. -->
    <target name="make-platform">
        <echo msg="Make the platform." />
        <drush
            command="make"
            assume="yes"
            bin="${drush.bin}"
            pipe="yes"
            verbose="${drush.verbose}"
            root="${platform.build.dir}">
            <param>${platform.make}</param>
            <param>${platform.build.dir}</param>
            <!-- Increasing the concurrency improves the build time by a factor of 3. -->
            <option name="concurrency">10</option>
            <option name="no-patch-txt"></option>
            <!-- This option will allow us to build inside an existing folder. -->
            <option name="no-core"></option>
            <!-- Install all contributed projects inside the chosen profile. -->
            <option name="contrib-destination">profiles/${platform.profile.name}</option>
        </drush>
    </target>

    <!-- Make one of the profiles in order to build a multisite platform. -->
    <target name="make-multisite-platform">
        <!-- Override the location of the make file. -->
        <property name="platform.make" value="${platform.resources.profiles.dir}/${platform.profile.name}/build.make" override="yes" />
        <phingcall target="make-platform"/>
    </target>

    <!--
        Clean up core profiles which might be present inside the symlinked
        profiles folder.
    -->
    <target name="clean-platform-profiles">
        <delete dir="${platform.resources.profiles.dir}/minimal" />
        <delete dir="${platform.resources.profiles.dir}/standard" />
        <delete dir="${platform.resources.profiles.dir}/testing" />
    </target>

    <!-- Symlink the profile folders for easy development. -->
    <target name="link-platform-profiles">
        <!-- Make a backup of the core profiles folder. -->
        <move file="${platform.build.profiles.dir}" todir="${phing.project.tmp.dir}" />
        <!-- Symlink our profiles folder. -->
        <symlink link="${platform.build.profiles.dir}" target="${platform.resources.profiles.dir}" />
        <!-- Restore the core profiles. -->
        <move file="${phing.project.tmp.dir}/profiles/minimal" todir="${platform.build.profiles.dir}" />
        <move file="${phing.project.tmp.dir}/profiles/standard" todir="${platform.build.profiles.dir}" />
        <move file="${phing.project.tmp.dir}/profiles/testing" todir="${platform.build.profiles.dir}" />
    </target>

    <!-- Copy the profile folders for deploying on production. -->
    <target name="copy-platform-profiles">
        <!-- Make a backup of the core profiles folder. -->
        <move file="${platform.build.profiles.dir}" todir="${phing.project.tmp.dir}" />
        <!-- Copy our profiles folder. -->
        <copy todir="${platform.build.profiles.dir}">
            <fileset dir="${platform.resources.profiles.dir}">
                <include name="**"></include>
            </fileset>
        </copy>
        <!-- Restore the core profiles. -->
        <move file="${phing.project.tmp.dir}/profiles/minimal" todir="${platform.build.profiles.dir}" />
        <move file="${phing.project.tmp.dir}/profiles/standard" todir="${platform.build.profiles.dir}" />
        <move file="${phing.project.tmp.dir}/profiles/testing" todir="${platform.build.profiles.dir}" />
    </target>

    <target name="build-platform-dev"
            description="Build a local development version of the platform."
            depends="delete-platform, make-drupal-core, clean-platform-profiles, link-platform-profiles, make-platform" />

    <target name="build-platform-dist"
            description="Build a version of the platform intended to distribute as a release package."
            depends="delete-platform, make-drupal-core, clean-platform-profiles, copy-platform-profiles, make-platform" />

    <target
        name="build-multisite-dist"
        description="Build a multisite version of the platform intended to distribute as a release package."
        depends="delete-platform, make-drupal-core, clean-platform-profiles, copy-platform-profiles">

        <!-- First make the standard profile. -->
        <property name="platform.profile.name" value="multisite_drupal_standard" override="yes" />
        <phingcall target="make-multisite-platform"/>

        <!-- Then make the communities profile. -->
        <property name="platform.profile.name" value="multisite_drupal_communities" override="yes" />
        <phingcall target="make-multisite-platform"/>
    </target>

</project>
